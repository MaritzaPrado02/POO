<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rYWYp0mDlXmarvmasNmAAQEAOw==
</value>
  </data>
</root>