<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>